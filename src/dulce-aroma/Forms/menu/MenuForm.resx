<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripLabel1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPkSURBVFhHtZRL
        bFNHFIZRd910XyHRbit11y5YsOoyxHZyjXkEJaJICHVVIYQK6qJVJF6NY/OoEwwEC0QBBVmEFkJQAjYp
        JBAc28SFJIpjG5tadnxDyiO0JODDOTcdd+742AkqLD5l5r8z///PveMsA4C3wlNf/5lH05rb7PZfkN52
        u30E/+aR1y6bDfasrgWnzXaI28vBihxeh2NFm6YFMQgq4a6rWyhgtfZwHhysqILBK5ECFyrzXgq4HI4P
        0TyuhnEcrteMAvtrLc9bbbYazk+FFWXwG3/DhVXiQF097MUSVMRltW7nPGVYUQZNr6ohi0ElqMBPFmua
        85RhRRk0pBvOBlVjX63FKOHWtI85XwEryqCZrpovBTy9UQDvwjrOV8CKMmg2Q4aho4f7+3b/eLdtjb0o
        B8kca2h4dm1v81D6ij/o27L5BRVwWiyrOF8BK8qg8bN415kAJCJAFOPh3Gy0H0POB++f6Qhmr10MPg3f
        GHo1fncSn8+LdfPh4KxTs4OzpuYTzlfAijKpy529wvStiATh6c3uvzDiA85XwIomEpF/ysyXAhaA4eto
        wXhKsKKJRPRvNmAx3lmBZCTOBiwGhUeCc6ynBCuaSITPsQHVmAgtFBj5/SHrKcGKJhKRHWUBizF2Z6FA
        7NYl1lOCFU1kosvRdKYspBrRGwDhQBFGb3/BekqwYhmJcBMbxPFgcOH0f9zysl4KrMgyGfGxgTLjQ3Ry
        /Pb9E6wHAytW4nk6TiX4z0Enx9c+Nx7G98/v52DFSmTz02P5/NTMbCbeM5+KBYoToXRxdHDq9f3B5NxY
        aLSQ/fMJreH2VoIVBRtPT3+0yTfzqSCTezyBAVANWkNr17XnPnd4sqsc7ZnlnLeAFRs7Cl82HtdDSBEB
        wfd+He5N/hf28FHWQMzpGa0R6xu8U2BzpcDSmpzVDj5q5LLKhCbv4xW4+YkwUfn6hA7+6wOQGdwBr4bX
        GtCYNHrG7bG2JmF1y2RRO5RbqeaZJgRu2KMaqDQdL8DNvha8dGsMaEwat5ZY68lCzf441LlTA2qeaULg
        hl9VA47vTkVhtHurAY2F7vH3wPzwengZ2gDN5+4YWoM3bxSwupI5Nc80IRo79B5hVo3dpwPwovcrAxpv
        O6tDIDYNt2PjMDLSbzAQS0LfvWnY4vu3QGuqoOaZJsRSC/x89kKpAI2dV/TSZVTZdX7q3Rc41ekrFaDx
        eyuw4UjeuESyRnT53aUCNG7prlxgZ+f/KEDh2sG0KZwIdP1QKkDjTfgTpBL0JmT2XdJho7iESypwTD8p
        B1UqMPzbt6UCNFafy6xvzxkFbO6U8m8alr0B5uvi25TO/OkAAAAASUVORK5CYII=
</value>
  </data>
</root>